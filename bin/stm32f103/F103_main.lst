
F103_main.bin:     file format binary


Disassembly of section .data:

00000000 <.data>:
   0:	20000400       #  sp
   4:	08000145       #  start_up 0x08000144
   8:	080002e7      
   c:	080002df      
  10:	080002e3      
  14:	0800018d      
  18:	0800045d      
  20:   00000000
  24:   00000000
  28:   00000000
  2c:	0800030d   
  30:	08000191   
  34:	00000000   
  38:	080002e9   
  3c:	080003f9   
  40:	0800015f   
  ..:	0800015f   
 12c:	0800015f   

__Init2:
 130:	f8df d00c 	ldr.w	sp, [pc, #12]	@ 0x140  // sp = 0x20000400
 134:	f000 f818 	bl	0x168           @ call 0168

__sub__0138:
 138:	4800      	ldr	r0, [pc, #0]	@ (0x13c)
 13a:	4700      	bx	r0              @ goto 0x08000480  // Init3

 13c:	08000481   
 140:	20000400   

__Start_Up:
 144:	4806      	ldr	r0, [pc, #24]	@ (0x160)
 146:	4780      	blx	r0              @ call 0x080003fc

 148:	4806      	ldr	r0, [pc, #24]	@ (0x164)
 14a:	4700      	bx	r0              @ goto 0x08000130  // Init2

 14c:	e7fe      	b.n	0x14c
 14e:	e7fe      	b.n	0x14e
 150:	e7fe      	b.n	0x150
 152:	e7fe      	b.n	0x152
 154:	e7fe      	b.n	0x154
 156:	e7fe      	b.n	0x156
 158:	e7fe      	b.n	0x158
 15a:	e7fe      	b.n	0x15a
 15c:	e7fe      	b.n	0x15c
 15e:	e7fe      	b.n	0x15e

 160:	080003fd    
 164:	08000131    

__sub__0168:
 168:	4c06      	ldr	r4, [pc, #24]	@ (0x184)  {080004bc}
 16a:	4d07      	ldr	r5, [pc, #28]	@ (0x188)  {080004cc}
 16c:	e006      	b.n	0x17c

__mm__016e:
 16e:	68e0      	ldr	r0, [r4, #12]
 170:	f040 0301 	orr.w	r3, r0, #1
 174:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 178:	4798      	blx	r3		@ call 0x08000470

 17a:	3410      	adds	r4, #16

__mm__017c:
 17c:	42ac      	cmp	r4, r5
 17e:	d3f6      	bcc.n	0x16e

 180:	f7ff ffda 	bl	0x138


 184:	080004bc      	lsls	r4, r7, #18
 188:	080004cc      	lsls	r4, r1, #19

 18c:	bf00      	nop
 18e:	e7fe      	b.n	0x18e		@ forever loop

 190:	4770      	bx	lr		@ ret

@ Delay loop r0
__sub__0192:
 192:	e000      	b.n	0x196

__mm__0194:
 194:	1e40      	subs	r0, r0, #1

__mm__0196:
 196:	2800      	cmp	r0, #0
 198:	d1fc      	bne.n	0x194

 19a:	4770      	bx	lr		@ ret

__sub__019c:
 19c:	b508      	push	{r3, lr}
 19e:	2101      	movs	r1, #1
 1a0:	2010      	movs	r0, #16
 1a2:	f000 f8a3 	bl	0x2ec		@ call 02ec   { r0 = 16, r1 = 1 }

 1a6:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 1aa:	f8ad 0000 	strh.w	r0, [sp]
 1ae:	2003      	movs	r0, #3
 1b0:	f88d 0002 	strb.w	r0, [sp, #2]
 1b4:	2010      	movs	r0, #16
 1b6:	f88d 0003 	strb.w	r0, [sp, #3]
 1ba:	4669      	mov	r1, sp
 1bc:	4801      	ldr	r0, [pc, #4]	@ (0x1c4)  {0x40011000}
 1be:	f000 f803 	bl	0x1c8		@ call 01c8  
						@	r0 = 0x40011000
						@ 	r1 = sp (0x2000,3,16) (h,b,b) (0,2,3)	   

 1c2:	bd08      	pop	{r3, pc}	@ pop & ret

 1c4:	40011000      	

__sub__01c8:
 1c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 1cc:	4602      	mov	r2, r0		@ base addr GPIO {ex 40011000}
 1ce:	2500      	movs	r5, #0
 1d0:	2600      	movs	r6, #0
 1d2:	2000      	movs	r0, #0
 1d4:	2300      	movs	r3, #0
 1d6:	2400      	movs	r4, #0
 1d8:	2700      	movs	r7, #0
 1da:	f891 c003 	ldrb.w	ip, [r1, #3]    @ [sp+3].b = 16  {see 01b6} 
 1de:	f00c 050f 	and.w	r5, ip, #15     @ r5 = 16 & 15 => 0
 1e2:	f891 c003 	ldrb.w	ip, [r1, #3]	@  
 1e6:	f00c 0c10 	and.w	ip, ip, #16     @ 16 & 16 => 16
 1ea:	f1bc 0f00 	cmp.w	ip, #0          @ 
 1ee:	d003      	beq.n	0x1f8           @ ?  r12 == 0

 1f0:	f891 c002 	ldrb.w	ip, [r1, #2]
 1f4:	ea4c 0505 	orr.w	r5, ip, r5      @ r5 = r5 | [sp+2].b  => 3

__mm__01f8:
 1f8:	f891 c000 	ldrb.w	ip, [r1]	@
 1fc:	f1bc 0f00 	cmp.w	ip, #0
 200:	d031      	beq.n	0x266           @ ?  [sp].b == 0

 202:	6814      	ldr	r4, [r2, #0]	@ r4 = [0x40011000]  {GPIOC}
 204:	2000      	movs	r0, #0
 206:	e02b      	b.n	0x260

__mm__0208:
 208:	f04f 0c01 	mov.w	ip, #1
 20c:	fa0c f300 	lsl.w	r3, ip, r0      @
 210:	f8b1 c000 	ldrh.w	ip, [r1]
 214:	ea0c 0603 	and.w	r6, ip, r3
 218:	429e      	cmp	r6, r3
 21a:	d120      	bne.n	0x25e           @ bit[r0] in [r1].h == 0 --> 025e

 21c:	0083      	lsls	r3, r0, #2	@ 
 21e:	f04f 0c0f 	mov.w	ip, #15
 222:	fa0c f703 	lsl.w	r7, ip, r3      @ r7   =  0xF << (r0 * 4) 
 226:	43bc      	bics	r4, r7          @ r4  &= ~r7
 228:	fa05 fc03 	lsl.w	ip, r5, r3      @ r12  =  r5 << (r0 * 4)
 22c:	ea4c 0404 	orr.w	r4, ip, r4      @ r4  |=  r12
 230:	f891 c003 	ldrb.w	ip, [r1, #3]
 234:	f1bc 0f28 	cmp.w	ip, #40		
 238:	d106      	bne.n	0x248           @ [r1+3] != 0x28

 23a:	f04f 0c01 	mov.w	ip, #1
 23e:	fa0c fc00 	lsl.w	ip, ip, r0	 
 242:	f8c2 c014 	str.w	ip, [r2, #20]   @ [0x40011014] = 1 << r0 
 246:	e00a      	b.n	0x25e

__mm__0248:
 248:	f891 c003 	ldrb.w	ip, [r1, #3]
 24c:	f1bc 0f48 	cmp.w	ip, #72		
 250:	d105      	bne.n	0x25e           @ [r1+3] != 0x48 

 252:	f04f 0c01 	mov.w	ip, #1
 256:	fa0c fc00 	lsl.w	ip, ip, r0
 25a:	f8c2 c010 	str.w	ip, [r2, #16]   @ [0x40011010] = 1 << r0 

__mm__025e:
 25e:	1c40      	adds	r0, r0, #1	@  r0 += 1

__mm__0260:
 260:	2808      	cmp	r0, #8
 262:	d3d1      	bcc.n	0x208           @  r0 < 8  --> 0208

 264:	6014      	str	r4, [r2, #0]

__mm__0266:
 266:	f8b1 c000 	ldrh.w	ip, [r1]
 26a:	f1bc 0fff 	cmp.w	ip, #255	
 26e:	dd34      	ble.n	0x2da           @ [r1] <= 255

 270:	6854      	ldr	r4, [r2, #4]
 272:	2000      	movs	r0, #0
 274:	e02e      	b.n	0x2d4           @ goto 02d4

__mm__0276:
 276:	f100 0c08 	add.w	ip, r0, #8
 27a:	f04f 0801 	mov.w	r8, #1
 27e:	fa08 f30c 	lsl.w	r3, r8, ip
 282:	f8b1 c000 	ldrh.w	ip, [r1]
 286:	ea0c 0603 	and.w	r6, ip, r3       
 28a:	429e      	cmp	r6, r3
 28c:	d121      	bne.n	0x2d2   	@ bit[r0+8] in [r1].h == 0 --> 02d2

 28e:	0083      	lsls	r3, r0, #2
 290:	f04f 0c0f 	mov.w	ip, #15
 294:	fa0c f703 	lsl.w	r7, ip, r3
 298:	43bc      	bics	r4, r7          @ r4 &= ~( 0xF << (r0*4) )
 29a:	fa05 fc03 	lsl.w	ip, r5, r3
 29e:	ea4c 0404 	orr.w	r4, ip, r4      @ r4 |= ( r5 << (r0*4) ) 
 2a2:	f891 c003 	ldrb.w	ip, [r1, #3]
 2a6:	f1bc 0f28 	cmp.w	ip, #40		
 2aa:	d105      	bne.n	0x2b8           @ [r1+3] != 0x28

 2ac:	f100 0c08 	add.w	ip, r0, #8
 2b0:	fa08 f80c 	lsl.w	r8, r8, ip
 2b4:	f8c2 8014 	str.w	r8, [r2, #20]   @ [0x40011014] = r8 << (r0+8)

__mm__02b8:
 2b8:	f891 c003 	ldrb.w	ip, [r1, #3]
 2bc:	f1bc 0f48 	cmp.w	ip, #72		
 2c0:	d107      	bne.n	0x2d2           @ [r1+3] != 0x48

 2c2:	f100 0c08 	add.w	ip, r0, #8
 2c6:	f04f 0801 	mov.w	r8, #1
 2ca:	fa08 f80c 	lsl.w	r8, r8, ip
 2ce:	f8c2 8010 	str.w	r8, [r2, #16]	@ [0x40011010] = 1 << (r0+8)

__mm__02d2:
 2d2:	1c40      	adds	r0, r0, #1	@ r0 += 1

__mm__02d4:
 2d4:	2808      	cmp	r0, #8
 2d6:	d3ce      	bcc.n	0x276           @ r0 < 8

 2d8:	6054      	str	r4, [r2, #4]
 2da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

 2de:	bf00      	nop
 2e0:	e7fe      	b.n	0x2e0

 2e2:	bf00      	nop
 2e4:	e7fe      	b.n	0x2e4

 2e6:	4770      	bx	lr
 2e8:	4770      	bx	lr

 2ea:	0000      	movs	r0, r0

__sub__02ec:
 2ec:	b129      	cbz	r1, 0x2fa	@ ? r1 == 0

 2ee:	4a06      	ldr	r2, [pc, #24]	@ (0x308) {0x40021000} RCC
 2f0:	6992      	ldr	r2, [r2, #24]
 2f2:	4302      	orrs	r2, r0
 2f4:	4b04      	ldr	r3, [pc, #16]	
 2f6:	619a      	str	r2, [r3, #24]   @ [0x40021018] |= r0   {if r0=16}
					        @ set bit4 [0x40021018]
						@ set RCC_APB2ENR.IOPCEN 
 2f8:	e004      	b.n	0x304

__mm__02fa:
 2fa:	4a03      	ldr	r2, [pc, #12]	 
 2fc:	6992      	ldr	r2, [r2, #24]
 2fe:	4382      	bics	r2, r0
 300:	4b01      	ldr	r3, [pc, #4]	@ [0x40021018] &= ~r0
 302:	619a      	str	r2, [r3, #24]

__mm__0304:
 304:	4770      	bx	lr		@ ret

 306:	0000      	
 308:	40021000	@ RCC

 30c:	4770      	bx	lr		@ ret

__sub__030e:
 30e:	b510      	push	{r4, lr}
 310:	f000 f802 	bl	0x318
 314:	bd10      	pop	{r4, pc}	@ ret

 316:	0000      	

__sub__0318:
 318:	b50c      	push	{r2, r3, lr}
 31a:	2000      	movs	r0, #0
 31c:	9001      	str	r0, [sp, #4]
 31e:	9000      	str	r0, [sp, #0]

 320:	4833      	ldr	r0, [pc, #204]	@ (0x3f0) {0x40021000} RCC
 322:	6800      	ldr	r0, [r0, #0]
 324:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
 328:	4931      	ldr	r1, [pc, #196]	
 32a:	6008      	str	r0, [r1, #0]    @ set bit16 [0x40021000]
						@ HSEON
 32c:	bf00      	nop

__mm__032e:
 32e:	4830      	ldr	r0, [pc, #192]	@ (0x3f0) {0x40021000} RCC
 330:	6800      	ldr	r0, [r0, #0]
 332:	f400 3000 	and.w	r0, r0, #131072	@ 0x20000
 336:	9000      	str	r0, [sp, #0]    @ [SP] = [0x40021000] & 0x20000 {mask bit17}

 338:	9801      	ldr	r0, [sp, #4]	 
 33a:	1c40      	adds	r0, r0, #1
 33c:	9001      	str	r0, [sp, #4]    @ [SP+4] += 1

 33e:	9800      	ldr	r0, [sp, #0]
 340:	b918      	cbnz	r0, 0x34a       @ [SP] != 0  {bit17 == 1}  HSERDY

 342:	9801      	ldr	r0, [sp, #4]
 344:	f5b0 6fa0 	cmp.w	r0, #1280	@ 0x500
 348:	d1f1      	bne.n	0x32e           @ while [SP+4] < 0x500 

__mm__034a:
 34a:	4829      	ldr	r0, [pc, #164]	@ (0x3f0) {0x40021000} RCC
 34c:	6800      	ldr	r0, [r0, #0]
 34e:	f400 3000 	and.w	r0, r0, #131072	@ 0x20000
 352:	b110      	cbz	r0, 0x35a	@ HSERDY == 0 {after delay 0x500}

 354:	2001      	movs	r0, #1
 356:	9000      	str	r0, [sp, #0]	@ [SP] = 1
 358:	e001      	b.n	0x35e

__mm__035a:
 35a:	2000      	movs	r0, #0
 35c:	9000      	str	r0, [sp, #0]    @ [SP] = 0

__mm__035e:
 35e:	9800      	ldr	r0, [sp, #0]
 360:	2801      	cmp	r0, #1
 362:	d143      	bne.n	0x3ec		@ if [SP] != 1  {not ready HSE} return


 364:	4823      	ldr	r0, [pc, #140]	@ (0x3f4) {0x40022000} FLASH
 366:	6800      	ldr	r0, [r0, #0]
 368:	f040 0010 	orr.w	r0, r0, #16
 36c:	4921      	ldr	r1, [pc, #132]	
 36e:	6008      	str	r0, [r1, #0]    @ set bit4 [0x40022000] PRFTBE
						@ Prefetch buffer enabled

 370:	4608      	mov	r0, r1
 372:	6800      	ldr	r0, [r0, #0]
 374:	f020 0003 	bic.w	r0, r0, #3
 378:	6008      	str	r0, [r1, #0]	@ clear bit0 bit1 [0x40022000] LATENCY

 37a:	4608      	mov	r0, r1
 37c:	6800      	ldr	r0, [r0, #0]
 37e:	f040 0002 	orr.w	r0, r0, #2
 382:	6008      	str	r0, [r1, #0]    @ set bit1 [0x40022000] LATENCY
						@ 2 wait states

 384:	481a      	ldr	r0, [pc, #104]	@ (0x3f0) {0x40021000} RCC
 386:	6840      	ldr	r0, [r0, #4]
 388:	4919      	ldr	r1, [pc, #100]	
 38a:	6048      	str	r0, [r1, #4]    @ rewrite [0x40021004] RCC_CFGR

 38c:	4608      	mov	r0, r1
 38e:	6840      	ldr	r0, [r0, #4]
 390:	6048      	str	r0, [r1, #4]    @ rewrite [0x40021004] RCC_CFGR

 392:	4608      	mov	r0, r1
 394:	6840      	ldr	r0, [r0, #4]
 396:	f440 6080 	orr.w	r0, r0, #1024	@ 0x400
 39a:	6048      	str	r0, [r1, #4]    @ set bit10 [0x40021004] PPRE = 100

 39c:	4608      	mov	r0, r1
 39e:	6840      	ldr	r0, [r0, #4]
 3a0:	f420 107c 	bic.w	r0, r0, #4128768	@ 0x3f0000
 3a4:	6048      	str	r0, [r1, #4]            @ clear PLLMUL,PLLXTPRE,PLLSRC

 3a6:	4608      	mov	r0, r1
 3a8:	6840      	ldr	r0, [r0, #4]
 3aa:	f440 10e8 	orr.w	r0, r0, #1900544	@ 0x1d0000
 3ae:	6048      	str	r0, [r1, #4]            @ set bits20-18,16 [0x40021004]
							@ PLLMUL=0111 {x9}  PLLSRC=1  {? 72}

 3b0:	4608      	mov	r0, r1
 3b2:	6800      	ldr	r0, [r0, #0]
 3b4:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 3b8:	6008      	str	r0, [r1, #0]            @ set bit24 [0x40021000]  PLLON

 3ba:	bf00      	nop
__mm__03bc:
 3bc:	480c      	ldr	r0, [pc, #48]	@ (0x3f0)  {0x40021000}
 3be:	6800      	ldr	r0, [r0, #0]
 3c0:	f000 7000 	and.w	r0,r0,#33554432	@ 0x2000000
 3c4:	2800      	cmp	r0, #0
 3c6:	d0f9      	beq.n	0x3bc           @ wait PLLRDY 


 3c8:	4809      	ldr	r0, [pc, #36]	@ (0x3f0)  {0x40021000}
 3ca:	6840      	ldr	r0, [r0, #4]
 3cc:	f020 0003 	bic.w	r0, r0, #3
 3d0:	4907      	ldr	r1, [pc, #28]	
 3d2:	6048      	str	r0, [r1, #4]    @ RCC_CFGR.SW = 0

 3d4:	4608      	mov	r0, r1
 3d6:	6840      	ldr	r0, [r0, #4]
 3d8:	f040 0002 	orr.w	r0, r0, #2
 3dc:	6048      	str	r0, [r1, #4]    @ RCC_CFGR.SW = 2  
						@ PLL select as system clock
 3de:	bf00      	nop

__mm__03e0:
 3e0:	4803      	ldr	r0, [pc, #12]	@ (0x3f0)  {0x40021000}
 3e2:	6840      	ldr	r0, [r0, #4]
 3e4:	f000 000c 	and.w	r0, r0, #12
 3e8:	2808      	cmp	r0, #8
 3ea:	d1f9      	bne.n	0x3e0		@ wait SWS == 2  {status PLL as system clock}

__mm__03ec:
 3ec:	bd0c      	pop	{r2, r3, pc}	@ ret

 3ee:	0000      	movs	r0, r0

 3f0:	40021000      	@ RCC	
 3f4:	40022000      	@ FLASH

 3f8:	4770      	bx	lr
 3fa:	0000      	movs	r0, r0

__sub__03fc:
 3fc:	b510      	push	{r4, lr}
 3fe:	4813      	ldr	r0, [pc, #76]	@ (0x44c) {0x40021000} RCC
 400:	6800      	ldr	r0, [r0, #0]
 402:	f040 0001 	orr.w	r0, r0, #1
 406:	4911      	ldr	r1, [pc, #68]	
 408:	6008      	str	r0, [r1, #0]    @ set bit0 RCC_CR  {HSION}

 40a:	4608      	mov	r0, r1
 40c:	6840      	ldr	r0, [r0, #4]
 40e:	4910      	ldr	r1, [pc, #64]	@ (0x450)  {0xf8ff0000}
 410:	4008      	ands	r0, r1
 412:	490e      	ldr	r1, [pc, #56]	 
 414:	6048      	str	r0, [r1, #4]    @ [0x40021004] &= f8ff0000
                                                @ MCO = 0 no clock output
						@ HSI as sys clock (no dividers)
 416:	4608      	mov	r0, r1
 418:	6800      	ldr	r0, [r0, #0]
 41a:	490e      	ldr	r1, [pc, #56]	@ (0x454)  {fef6ffff}
 41c:	4008      	ands	r0, r1
 41e:	490b      	ldr	r1, [pc, #44]	
 420:	6008      	str	r0, [r1, #0]    @ [0x40021000] &= fef6ffff
						@ PLLON=0, CSSON=0, HSEON=0
						              
 422:	4608      	mov	r0, r1
 424:	6800      	ldr	r0, [r0, #0]
 426:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
 42a:	6008      	str	r0, [r1, #0]    @ clear bit18 [0x40021000] // HSEBYP 

 42c:	4608      	mov	r0, r1
 42e:	6840      	ldr	r0, [r0, #4]
 430:	f420 00fe 	bic.w	r0,r0,#8323072	@ 0x7f0000
 434:	6048      	str	r0, [r1, #4]    @ clear bits22-26 [0x40021004]
						@ HSI/2 to PLL, PLL*2 out 

 436:	f44f 001f 	mov.w	r0, #10420224	@ 0x9f0000
 43a:	6088      	str	r0, [r1, #8]    @ clear all RCC interrupt flags

 43c:	f7ff ff67 	bl	0x30e           @ call 030e

 440:	f04f 6000 	mov.w	r0, #134217728	@ 0x08000000
 444:	4904      	ldr	r1, [pc, #16]	@ (0x458)  {e000ed08} VTOR
 446:	6008      	str	r0, [r1, #0]    @ [e000ed08] = 0x08000000

 448:	bd10      	pop	{r4, pc}        @ ret

 44a:	0000      	
 44c:	40021000      	@ RCC
 450:	f8ff0000      	
 454:	fef6ffff 	
 458:	e000ed08 	@ 

 45c:	bf00      	nop
 45e:	e7fe      	b.n	0x45e

__sub__0460:                      		@ copy mem @r1 = @r0 {r2 bytes}
 460:	e002      	b.n	0x468

 462:	c808      	ldmia	r0!, {r3}
 464:	1f12      	subs	r2, r2, #4
 466:	c108      	stmia	r1!, {r3}

__mm__0468:
 468:	2a00      	cmp	r2, #0
 46a:	d1fa      	bne.n	0x462

 46c:	4770      	bx	lr		@ ret

 46e:	4770      	bx	lr

__sub__0470:                                    @ zero fill @r1 = 0 {r2 bytes}
 470:	2000      	movs	r0, #0
 472:	e001      	b.n	0x478

 474:	c101      	stmia	r1!, {r0}
 476:	1f12      	subs	r2, r2, #4

 478:	2a00      	cmp	r2, #0
 47a:	d1fb      	bne.n	0x474

 47c:	4770      	bx	lr		@ ret

 47e:	0000      	

__mm__0480:
 480:	f7ff fe8c 	bl	0x19c
 484:	e012      	b.n	0x4ac

__mm__0486:
 486:	2001      	movs	r0, #1
 488:	4909      	ldr	r1, [pc, #36]	@ (0x4b0)
 48a:	6008      	str	r0, [r1, #0]	@ GPIOC_ODR.ODR13 = 1

 48c:	4809      	ldr	r0, [pc, #36]	@ (0x4b4)
 48e:	f7ff fe80 	bl	0x192           @ delay 0x000fffff

 492:	4808      	ldr	r0, [pc, #32]	@ (0x4b4)
 494:	f7ff fe7d 	bl	0x192           @ delay 0x000fffff

 498:	2000      	movs	r0, #0
 49a:	4907      	ldr	r1, [pc, #28]	@ (0x4b8)
 49c:	f8c1 01b4 	str.w	r0, [r1, #436]	@ GPIOC_ODR.ODR13 = 0

 4a0:	4804      	ldr	r0, [pc, #16]	@ (0x4b4)
 4a2:	f7ff fe76 	bl	0x192           @ delay 0x000fffff

 4a6:	4803      	ldr	r0, [pc, #12]	@ (0x4b4)
 4a8:	f7ff fe73 	bl	0x192           @ delay 0x000fffff
__mm__04ac:
 4ac:	e7eb      	b.n	0x486           @ forever loop

 4ae:	0000      	
 4b0:	422201b4      	@  4001100D bit5  {4001100C bit13}  GPIOC_ODR.ODR13
 4b4:	000fffff 	
 4b8:	42220000      	@  40011000 bit0  GPIOC

 4bc:	080004cc      	
 4c0:	20000000      	
 4c4:	00000400      	
 4c8:	08000470      	

 4cc:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4d0:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4d4:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4d8:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4dc:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4e0:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4e4:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4e8:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4ec:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4f0:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4f4:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4f8:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
 4fc:	ffff ffff 			@ <UNDEFINED> instruction: 0xffffffff
